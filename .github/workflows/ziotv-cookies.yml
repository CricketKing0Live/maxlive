name: Update Cookies in Ziotv.json

on:
  schedule:
    - cron: '0 */4 * * *' # Runs every 4 hours
  workflow_dispatch: # Allows manual triggering

jobs:
  update-cookies:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      # Step 4: Create and run update script
      - name: Create and run update script
        run: |
          cat << 'EOF' > update_cookies.py
          import json
          import requests
          import os
          import re

          # Environment variables
          MAIN_URL = os.getenv('MAIN_URL')
          PLAYLIST_FILE = os.getenv('PLAYLIST_FILE')

          def fetch_m3u_content(url):
              """Fetch content from the main URL."""
              try:
                  response = requests.get(url)
                  response.raise_for_status()
                  return response.text
              except requests.RequestException as e:
                  print(f"Error fetching M3U file: {e}")
                  return None

          def parse_m3u_cookies(m3u_content):
              """Parse cookies from M3U file."""
              cookies = {}
              lines = m3u_content.splitlines()
              for i, line in enumerate(lines):
                  if '#EXTINF' in line and 'tvg-name' in line:
                      # Extract channel name
                      channel_name = re.search(r'tvg-name="([^"]+)"', line)
                      if channel_name:
                          channel_name = channel_name.group(1)
                      # Get the next line (link) which may contain the cookie
                      link = lines[i + 1].strip() if i + 1 < len(lines) else ''
                      # Extract cookie (assuming __hdnea__ format)
                      cookie_match = re.search(r'__hdnea__=[^|]+', link)
                      if cookie_match:
                          cookie = cookie_match.group(0)
                          cookies[channel_name] = cookie
              return cookies

          def update_json_playlist(playlist_file, cookies):
              """Update cookies in the JSON playlist."""
              try:
                  with open(playlist_file, 'r') as f:
                      playlist = json.load(f)
                  
                  # Assuming playlist is a list of channel objects
                  updated = False
                  for channel in playlist:
                      channel_name = channel.get('name')
                      if channel_name in cookies:
                          channel['cookie'] = cookies[channel_name]
                          updated = True
                  
                  if updated:
                      # Write updated JSON back to file
                      with open(playlist_file, 'w') as f:
                          json.dump(playlist, f, indent=2)
                      print(f"Updated cookies in {playlist_file}")
                  else:
                      print("No matching channels found to update cookies")
              except Exception as e:
                  print(f"Error updating JSON playlist: {e}")

          def main():
              # Fetch M3U content
              m3u_content = fetch_m3u_content(MAIN_URL)
              if not m3u_content:
                  return
              
              # Parse cookies from M3U
              cookies = parse_m3u_cookies(m3u_content)
              if not cookies:
                  print("No cookies found in M3U file")
                  return
              
              # Update JSON playlist
              update_json_playlist(PLAYLIST_FILE, cookies)

          if __name__ == '__main__':
              main()
          EOF

          python update_cookies.py
        env:
          MAIN_URL: https://raw.githubusercontent.com/alex8875/m3u/refs/heads/main/jtv.m3u
          PLAYLIST_FILE: Ziotv.json

      # Step 5: Commit and push changes
      - name: Commit changes
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git add Ziotv.json
          git commit -m 'Auto-update cookies in Ziotv.json' || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
