name: Update JioTV Cookies

on:
  schedule:
    # Run every 6 hours (UTC)
    - cron: '0 */6 * * *'
  workflow_dispatch:  # Allows manual trigger from GitHub Actions UI

permissions:
  contents: write  # Required to commit and push changes

jobs:
  update-cookies:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}  # Default token for commits

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'  # Latest stable Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests  # For fetching JSON/string from URL

      - name: Create and Run Update Script
        run: |
          # Create update_cookies.py inline
          cat << 'EOF' > update_cookies.py
          import json
          import requests
          import os

          # URL to fetch cookie (JSON or string)
          url = "https://jo-json.vodep39240327.workers.dev/"

          # JSON file path (repo root)
          json_file_path = "jiotv.json"

          try:
              # Fetch data from URL
              print("Fetching data from URL: " + url)
              response = requests.get(url, timeout=10)
              response.raise_for_status()
              raw_response = response.text.strip()
              print(f"Raw response: {raw_response[:200]}...")  # Log first 200 chars for debugging

              # Try to parse as JSON and extract cookie from 'url' field
              new_cookie = None
              try:
                  json_data = response.json()
                  print(f"Parsed JSON: {json.dumps(json_data, indent=2)}")  # Log full JSON for debugging
                  if "url" in json_data:
                      url_value = json_data["url"]
                      if "__hdnea__=" in url_value:
                          new_cookie = url_value.split("__hdnea__=")[1].strip()
                          print(f"Extracted cookie from JSON 'url': {new_cookie[:50]}...")
                      else:
                          raise ValueError("No '__hdnea__' found in JSON 'url' field.")
                  else:
                      raise ValueError("No 'url' field found in JSON response.")
              except json.JSONDecodeError:
                  print("Response is not JSON. Trying as direct cookie string...")
                  if raw_response.startswith("__hdnea__="):
                      new_cookie = raw_response
                      print(f"Extracted direct cookie: {new_cookie[:50]}...")
                  else:
                      raise ValueError("Response is neither valid JSON nor a direct __hdnea__ string.")

              if not new_cookie:
                  raise ValueError("Failed to extract __hdnea__ cookie from response.")

              # Check if JSON file exists
              if not os.path.exists(json_file_path):
                  raise FileNotFoundError(f"{json_file_path} not found in repo root.")

              # Read JSON file
              with open(json_file_path, 'r', encoding='utf-8') as file:
                  data = json.load(file)

              # Update cookie in all channels
              updated_count = 0
              if isinstance(data, list):
                  for channel in data:
                      if 'cookie' in channel:
                          channel['cookie'] = new_cookie
                          updated_count += 1
              else:
                  raise ValueError("jiotv.json is not a valid list of channels.")

              print(f"Updated {updated_count} channels.")

              # Write back to file
              with open(json_file_path, 'w', encoding='utf-8') as file:
                  json.dump(data, file, indent=2, ensure_ascii=False)

              print("Cookies updated successfully in jiotv.json!")

          except requests.exceptions.RequestException as e:
              print(f"Error fetching data from URL: {e}")
              exit(1)
          except json.JSONDecodeError as e:
              print(f"Error parsing jiotv.json: {e}")
              exit(1)
          except ValueError as e:
              print(f"Error: {e}")
              exit(1)
          except FileNotFoundError as e:
              print(f"Error: {e}")
              exit(1)
          except Exception as e:
              print(f"Unexpected error: {e}")
              exit(1)
          EOF

          # Run the script
          python update_cookies.py

      - name: Commit and Push Changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add jiotv.json
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update JioTV cookies [$(date '+%Y-%m-%d %H:%M:%S UTC')]"
            git push
          fi
