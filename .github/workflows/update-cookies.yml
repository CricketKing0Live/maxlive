name: Update JioTV Cookies

on:
  schedule:
    # Run every 6 hours (CRON format: minute hour day month day-of-week)
    - cron: '0 */6 * * *'
  workflow_dispatch:  # Allow manual trigger

jobs:
  update-cookies:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Permission to write to repository

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}  # Token for pushing changes

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install Python dependencies
      run: |
        pip install requests

    - name: Extract __hdnea__ from JSON and update Jiotv.json
      run: |
        python3 -c "
        import requests
        import json
        import sys
        import re

        # Hard-coded Main URL
        url = 'https://jo-json.vodep39240327.workers.dev/'

        # Fetch JSON from URL
        try:
            response = requests.get(url, timeout=10)
            response.raise_for_status()
        except requests.RequestException as e:
            print(f'Error fetching URL: {e}')
            sys.exit(1)

        # Parse JSON response
        try:
            json_data = response.json()
            print('JSON response received:')
            print(json.dumps(json_data, indent=2))
        except json.JSONDecodeError as e:
            print(f'Error decoding JSON response: {e}')
            sys.exit(1)

        # Extract __hdnea__ from the 'url' field
        if not isinstance(json_data, dict) or 'url' not in json_data:
            print('Error: JSON response does not contain a valid url field')
            sys.exit(1)

        url_field = json_data['url']
        match = re.search(r'__hdnea__=(.*?)(?:$|&)', url_field)
        if not match:
            print('Error: __hdnea__ not found in the url field')
            sys.exit(1)

        hdnea_cookie = f'__hdnea__={match.group(1)}'
        print(f'Extracted __hdnea__ cookie: {hdnea_cookie}')

        # Load Jiotv.json
        try:
            with open('Jiotv.json', 'r') as f:
                data = json.load(f)
            print('Jiotv.json loaded successfully. Content before update:')
            print(json.dumps(data, indent=2))
        except FileNotFoundError:
            print('Error: Jiotv.json not found. Please ensure the file exists.')
            sys.exit(1)
        except json.JSONDecodeError as e:
            print(f'Error decoding Jiotv.json: {e}')
            sys.exit(1)

        # Validate Jiotv.json structure
        if not isinstance(data, list) or not data:
            print(f'Error: Jiotv.json is not a non-empty list, found type {type(data)} or empty.')
            sys.exit(1)

        # Update cookie field for all channels
        updated = False
        for channel in data:
            if not isinstance(channel, dict):
                print(f'Warning: Skipping invalid channel entry (not a dict): {channel}')
                continue
            old_cookie = channel.get('cookie', 'None')
            if old_cookie != hdnea_cookie:
                channel['cookie'] = hdnea_cookie
                updated = True
                print(f'Updated channel {channel.get('name', 'unknown')}: cookie changed from {old_cookie} to {hdnea_cookie}')
            else:
                print(f'No update needed for channel {channel.get('name', 'unknown')}: cookie is already up-to-date')

        if not updated:
            print('No changes made to Jiotv.json: all cookies are already up-to-date.')
            sys.exit(0)

        # Write to Jiotv.json
        try:
            with open('Jiotv.json', 'w') as f:
                json.dump(data, f, indent=4)
            print('Jiotv.json updated successfully. Content after update:')
            print(json.dumps(data, indent=2))
        except Exception as e:
            print(f'Error writing to Jiotv.json: {e}')
            sys.exit(1)
        "

    - name: Commit and push updated Jiotv.json
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add Jiotv.json
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m 'Update __hdnea__ cookie in Jiotv.json [skip ci]'
          git push
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
