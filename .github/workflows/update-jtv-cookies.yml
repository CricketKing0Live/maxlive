name: Update JioTV Cookie (FIXED)

on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v4   # FIXED: "from" hata diya
        with:
          python-version: '3.11'

      - name: Install Requests
        run: pip install requests

      - name: Debug - Check Files
        run: |
          echo "Current Path: $(pwd)"
          echo "Files in repo:"
          ls -la
          if [ -f "Jiotv.json" ]; then
            echo "Jiotv.json FOUND!"
          else
            echo "Jiotv.json NOT FOUND!"
            exit 1
          fi

      - name: Extract Cookie & Update Jiotv.json
        run: |
          python - <<'PY'
          import json
          import requests
          import os
          from urllib.parse import urlparse, parse_qs

          WORKER_URL = "https://jo-json.vodep39240327.workers.dev/"
          PLAYLIST_FILE = "Jiotv.json"

          def get_cookie():
              try:
                  print(f"Fetching JSON from {WORKER_URL}")
                  resp = requests.get(WORKER_URL, timeout=30)
                  resp.raise_for_status()
                  data = resp.json()
                  if not data:
                      return None
                  url = next(iter(data.values())).get('url', '')
                  if not url:
                      return None
                  parsed = urlparse(url)
                  hdnea = parse_qs(parsed.query).get('__hdnea__', [])
                  if hdnea:
                      return f"__hdnea__={hdnea[0]}"
              except Exception as e:
                  print(f"Error: {e}")
              return None

          # Load playlist
          if not os.path.exists(PLAYLIST_FILE):
              print(f"{PLAYLIST_FILE} missing!")
              exit(1)

          with open(PLAYLIST_FILE, 'r', encoding='utf-8') as f:
              playlist = json.load(f)

          if not isinstance(playlist, list) or len(playlist) == 0:
              print("Playlist empty!")
              exit(1)

          new_cookie = get_cookie()
          if not new_cookie:
              print("Failed to get cookie!")
              exit(1)

          updated = 0
          for ch in playlist:
              if ch.get("cookie") != new_cookie:
                  ch["cookie"] = new_cookie
                  updated += 1

          print(f"Updating {updated} channels...")
          with open(PLAYLIST_FILE, 'w', encoding='utf-8') as f:
              json.dump(playlist, f, indent=2, ensure_ascii=False)

          print(f"{PLAYLIST_FILE} UPDATED SUCCESSFULLY!")
          PY

      - name: Show Updated Cookie
        run: |
          echo "Updated Cookie in Jiotv.json:"
          grep -A2 -B2 "__hdnea__" Jiotv.json || echo "No cookie found"

      - name: Commit & Push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add Jiotv.json
          git commit -m "Auto: Updated JioTV cookie (run #${{ github.run_number }})" || echo "No changes"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
